import streamlit as st
from openai import OpenAI
from api_seatable import SeatableSettings
import httpx
from keys import openai_key, seatable_api_prompts, proxyurl
from AnalyzatorResumeModel import LLMRequest_GetResult_base

proxies = {
    "http://": proxyurl,
    "https://": proxyurl,
}

seatable_settings = SeatableSettings("https://cloud.seatable.io", seatable_api_prompts)
openai_client = OpenAI(http_client=httpx.Client(proxies=proxies), api_key=(openai_key))




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ LLMRequest_GetResult_base
def create_llm_request(candidate_resume):
    openaiclient = openai_client
    seasettings = seatable_settings
    return LLMRequest_GetResult_base(openaiclient, seasettings, candidate_resume)



st.set_page_config(
    page_title="Resume_requirements_comparison",
    page_icon="üßä",
    layout="wide",
)




st.markdown(
    """
    <div style='text-align: center; padding: 20px;'>
        <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–µ–∑—é–º–µ!</h1>
        <p>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å  —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç—å –∏—Ö —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏.</p>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–±–æ—Ä–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –Ω–∞ –≤–∞—à—É –≤–∞–∫–∞–Ω—Å–∏—é.</p>
    </div>
    """,
    unsafe_allow_html=True
)
st.markdown('**–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –≤–∞–∫–∞–Ω—Å–∏–∏  –∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ :**')

file_resume_candidate_and_vacansy = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª. –ü—Ä–∏–Ω–∏–º–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç - .JSON", type=['json'])




if st.button('Process Files'):
    if file_resume_candidate_and_vacansy:
            with st.spinner():
                lml_request = create_llm_request(file_resume_candidate_and_vacansy)
                result = lml_request.query()
                st.write(result)
                print('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
                # result_number = find_elements_in_square_brackets(result)
                # st.title(f' –í—ã–≤–æ–¥ –æ—Ü–µ–Ω–∫–∏ —Å—Ö–æ–¥—Å—Ç–≤–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ {result_number}')
